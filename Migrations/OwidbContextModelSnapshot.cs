// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using owi_back.Context;

#nullable disable

namespace owi_back.Migrations
{
    [DbContext(typeof(OwidbContext))]
    partial class OwidbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("owi_back.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int")
                        .HasColumnName("task_id");

                    b.Property<string>("User")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("user");

                    b.HasKey("Id")
                        .HasName("PK__comments__3213E83FCC322038");

                    b.HasIndex("TaskId");

                    b.ToTable("comments", (string)null);
                });

            modelBuilder.Entity("owi_back.Models.Listing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.HasKey("Id")
                        .HasName("PK__listings__3213E83F9CC2368E");

                    b.HasIndex("ProjectId");

                    b.ToTable("listings", (string)null);
                });

            modelBuilder.Entity("owi_back.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime")
                        .HasColumnName("deadline");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PK__projects__3213E83F03E53C97");

                    b.ToTable("projects", (string)null);
                });

            modelBuilder.Entity("owi_back.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime")
                        .HasColumnName("deadline");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("ListingId")
                        .HasColumnType("int")
                        .HasColumnName("listing_id");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Tag")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tag");

                    b.HasKey("Id")
                        .HasName("PK__tasks__3213E83F4F170CB5");

                    b.HasIndex("ListingId");

                    b.ToTable("tasks", (string)null);
                });

            modelBuilder.Entity("owi_back.Models.Comment", b =>
                {
                    b.HasOne("owi_back.Models.Task", "Task")
                        .WithMany("Comments")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("comments_task_id_foreign");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("owi_back.Models.Listing", b =>
                {
                    b.HasOne("owi_back.Models.Project", "Project")
                        .WithMany("Listings")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("listings_project_id_foreign");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("owi_back.Models.Task", b =>
                {
                    b.HasOne("owi_back.Models.Listing", "Listing")
                        .WithMany("Tasks")
                        .HasForeignKey("ListingId")
                        .HasConstraintName("tasks_listing_id_foreign");

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("owi_back.Models.Listing", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("owi_back.Models.Project", b =>
                {
                    b.Navigation("Listings");
                });

            modelBuilder.Entity("owi_back.Models.Task", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
